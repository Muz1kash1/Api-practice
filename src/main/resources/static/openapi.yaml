openapi: 3.0.3
info:
  title: OpenApiWeek-5 - OpenAPI 3.0
  description: "zatichka"
  version: "1.0"

servers:
  - url: https://http://localhost:8080/
tags:
  - name: openApiCrud
    description: CRUD API работы с заказами

  - name: order
    description: Access to orders

paths:
  /order:
    put:
      tags:
        - order
      summary: Update an existing order
      description: Update an existing order by Id
      operationId: updateOrder
      requestBody:
        description: Replace an existent order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
        '405':
          description: Validation exception
        '500':
          description: Server Error

    get:
      tags:
        - order
      summary:  Find all orders
      description: Returns all order
      operationId: getAllOrders
      responses:
        '200':
          description: successful operation
          content:
            application:json:
              schema:
                type: array
                description: Array of orders
                items:
                  $ref: '#/components/schemas/orderDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: order not found
        '500':
          description: Server Error


    post:
      tags:
        - order
      summary: Add a new order
      description: Add a new order
      operationId: addorder
      requestBody:
        description: Create a new order in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderDTO'
        '405':
          description: Invalid input
        '500':
          description: Server Error




  /order/{orderId}:
    get:
      tags:
        - order
      summary: Find order by ID
      description: Returns a single order
      operationId: getorderById
      parameters:
        - name: orderId
          in: path
          description: ID of order to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderStatement'
        '400':
          description: Invalid ID supplied
        '404':
          description: order not found
        '500':
          description: Server Error
    patch:
      tags:
        - order
      summary : Update a existing order
      description: Update an existing order by ID
      operationId: patchOrder
      parameters:
        - name: orderId
          in: path
          description: ID of order to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existent order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderUpdateDTO'
        required: true
      responses:
        '200':
          description: Succesfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderDTO'
        '400':
          description: Invalid input
        '404':
          description: Order not found
        '405':
          description: Validation exception
        '500':
          description: Server Error



    delete:
      tags:
        - order
      summary: Deletes a order
      description: delete a order
      operationId: deleteorder
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: orderId
          in: path
          description: order id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid order value
        '500':
          description: Server Error


  /order/{orderId}/uploadCVS:
    post:
      tags:
        - order
      summary: uploads an svc
      description: ''
      operationId: uploadFile
      parameters:
        - name: orderId
          in: path
          description: ID of order to update
          required: true
          schema:
            type: integer
            format: int64
        - name: additionalMetadata
          in: query
          description: Additional Metadata
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '500':
          description: Server Error
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'


components:
  schemas:
    orderDTO:
      type: object
      properties:
        id:
          type: string
          example: or23
        productID:
          minimum: 1
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          minimum: 1
          maximum: 100
          format: int32
          example: 7
        date:
          type: string
          format: date-time
        status:
          type: string
          description: Order Status
          example: approved
          enum:
            - placed
            - approved
            - delivered
        complete:
          type: boolean
    orderUpdateDTO:
      type: object
      properties:
        quantity:
          type: integer
          minimum: 1
          maximum: 100
          format: int32
          example: 8
        date:
          type: string
          format: date-time
        complete:
          type: boolean

    orderStatement:
      required:
        - name
        - csvUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: bff

        photoUrls:
          type: array
          items:
            type: string


        status:
          type: string
          description: order status
          enum:
            - available
            - pending
            - sold

    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string

  requestBodies:
    order:
      description: order object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/orderStatement'

