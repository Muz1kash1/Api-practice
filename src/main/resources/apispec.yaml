openapi: 3.0.3
info:
  title: OpenApiWeek-5 - OpenAPI 3.0
  description: "zatichka"
  version: "1.0"

servers:
  - url: https://http://localhost:8080/
tags:
  - name: openApiCrud
    description: CRUD API работы с заказами

  - name: order
    description: Access to orders

paths:
  /order/period/{startDateTime}/{endDateTime}:
    get:
      tags:
        - order
      summary: Find all orders between two dates
      description: All orders from begin to end
      operationId: Orders between dates
      parameters:
        - name: startDateTime
          in: path
          description: Date of start
          required: true
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: path
          description: Date of end
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/orderDTO'
            application/csv:
              {}
        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                type: string
        '409':
          description: Illegal State
          content:
            application/problem+json:
              schema:
                type: string
        '404':
          description: order not found
          content:
            application/problem+json:
              schema:
                type: string
        '500':
          description: Server Error
          content:
            application/problem+json:
              schema:
                type: string

  /order/status/{status}:
    get:
      tags:
        - order
      summary: Find all orders of status
      description: All orders with this status
      operationId: Orders by status
      parameters:
        - name: status
          in: path
          description: status of order
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/orderDTO'
            application/csv:
              {}

        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                type: string
        '404':
          description: order not found
          content:
            application/problem+json:
              schema:
                type: string
        '409':
          description: Illegal State
          content:
            application/problem+json:
              schema:
                type: string
        '500':
          description: Server Error
          content:
            application/problem+json:
              schema:
                type: string



  /orders:


    get:
      tags:
        - order
      summary: Find all orders
      description: Returns all order
      operationId: getAllOrders
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/orderDTO'
            application/csv:
              {}

        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                type: string
        '404':
          description: order not found
          content:
            application/problem+json:
              schema:
                type: string
        '409':
          description: Illegal State
          content:
            application/problem+json:
              schema:
                type: string
        '500':
          description: Server Error
          content:
            application/problem+json:
              schema:
                type: string


    post:
      tags:
        - order
      summary: Add a new order
      description: Add a new order
      operationId: addOrder
      requestBody:
        description: Create a new order in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderDTO'
        '405':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                type: string
        '409':
          description: Illegal State
          content:
            application/problem+json:
              schema:
                type: string
        '500':
          description: Server Error
          content:
            application/problem+json:
              schema:
                type: string




  /orders/{orderId}:
    put:
      tags:
        - order
      summary: Update an existing order
      description: Update an existing order by Id
      operationId: updateOrder
      parameters:
        - name: orderId
          in: path
          description: Id of order to replace
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Replace an existent order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderDTO'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderDTO'

        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
          content:
            application/problem+json:
              schema:
                type: string
        '405':
          description: Validation exception
          content:
            application/problem+json:
              schema:
                type: string
        '409':
          description: Illegal State
          content:
            application/problem+json:
              schema:
                type: string
        '500':
          description: Server Error
          content:
            application/problem+json:
              schema:
                type: string

    get:
      tags:
        - order
      summary: Find order by ID
      description: Returns a single order
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of order to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderDTO'
            application/csv:
              {}

        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                type: string
        '404':
          description: order not found
          content:
            application/problem+json:
              schema:
                type: string
        '409':
          description: Illegal State
          content:
            application/problem+json:
              schema:
                type: string
        '500':
          description: Server Error
          content:
            application/problem+json:
              schema:
                type: string
    patch:
      tags:
        - order
      summary: Update a existing order
      description: Update an existing order by ID
      operationId: patchOrder
      parameters:
        - name: orderId
          in: path
          description: ID of order to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existent order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orderUpdateDTO'
        required: true
      responses:
        '200':
          description: Succesfull operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderDTO'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                type: string
        '404':
          description: Order not found
          content:
            application/problem+json:
              schema:
                type: string
        '405':
          description: Validation exception
          content:
            application/problem+json:
              schema:
                type: string
        '409':
          description: Illegal State
          content:
            application/problem+json:
              schema:
                type: string
        '500':
          description: Server Error
          content:
            application/problem+json:
              schema:
                type: string



    delete:
      tags:
        - order
      summary: Deletes a order
      description: delete a order
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: order id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Sucess
        '400':
          description: Invalid order value
          content:
            application/problem+json:
              schema:
                type: string
        '500':
          description: Server Error
          content:
            application/problem+json:
              schema:
                type: string







components:
  schemas:
    status:
      type: string
      description: Order Status
      example: approved
      enum:
        - placed
        - approved
        - delivered
    orderDTO:
      description: Order object
      required:
        - productID
        - quantity
      type: object
      properties:
        id:
          type: string
          example: or23
        productID:
          minimum: 1
          type: integer
          format: int64
          example: 198772
        quantity:
          type: integer
          minimum: 1
          maximum: 100
          format: int32
          example: 7
        date:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/status'
        complete:
          type: boolean
    orderUpdateDTO:
      description: Order update response object
      type: object
      properties:
        quantity:
          type: integer
          minimum: 1
          maximum: 100
          format: int32
          example: 8
        complete:
          type: boolean
        status:
          $ref: '#/components/schemas/status'




